# This file was programmatically generated from JSON Schemas.
# Generated on: 2025-09-23T15:31:28.436
# Do not edit this file directly.

# Depends on struct VolumeType from measureable_units.json
# Depends on struct TimeType from measureable_units.json
struct BoilProcedureType
    name::Union{Nothing, String}
    boil_time::TimeType
    notes::Union{Nothing, String}
    pre_boil_size::Union{Nothing, VolumeType}
    description::Union{Nothing, String}
    boil_steps::Union{Nothing, Vector{BoilStepType}}
end

# Depends on struct GravityType from measureable_units.json
# Depends on struct AcidityType from measureable_units.json
# Depends on struct TimeType from measureable_units.json
# Depends on struct TimeType from measureable_units.json
struct TimingType
    duration::Union{Nothing, TimeType}
    step::Union{Nothing, Int64}
    time::Union{Nothing, TimeType}
    use::Union{Nothing, UseType}
    pH::Union{Nothing, AcidityType}
    continuous::Union{Nothing, Bool}
    specific_gravity::Union{Nothing, GravityType}
end


# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
struct EfficiencyType
    lauter::Union{Nothing, PercentType}
    brewhouse::PercentType
    mash::Union{Nothing, PercentType}
    conversion::Union{Nothing, PercentType}
end

struct IngredientsType
    miscellaneous_additions::Union{Nothing, Vector{MiscellaneousAdditionType}}
    water_additions::Union{Nothing, Vector{WaterAdditionType}}
    hop_additions::Union{Nothing, Vector{HopAdditionType}}
    culture_additions::Union{Nothing, Vector{CultureAdditionType}}
    fermentable_additions::Vector{FermentableAdditionType}
end

# Depends on struct GravityType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct AcidityType from measureable_units.json
# Depends on struct RecipeStyleType from style.json
# Depends on struct ColorType from measureable_units.json
# Depends on struct IBUEstimateType from hop.json
# Depends on struct DateType from measureable_units.json
# Depends on struct GravityType from measureable_units.json
# Depends on struct BoilProcedureType from boil.json
# Depends on struct PackagingProcedureType from packaging.json
# Depends on struct MashProcedureType from mash.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct VolumeType from measureable_units.json
# Depends on struct FermentationProcedureType from fermentation.json
struct RecipeType
    fermentation::Union{Nothing, FermentationProcedureType}
    batch_size::VolumeType
    alcohol_by_volume::Union{Nothing, PercentType}
    mash::Union{Nothing, MashProcedureType}
    packaging::Union{Nothing, PackagingProcedureType}
    name::String
    author::String
    boil::Union{Nothing, BoilProcedureType}
    final_gravity::Union{Nothing, GravityType}
    notes::Union{Nothing, String}
    created::Union{Nothing, DateType}
    ibu_estimate::Union{Nothing, IBUEstimateType}
    calories_per_pint::Union{Nothing, Float64}
    color_estimate::Union{Nothing, ColorType}
    style::Union{Nothing, RecipeStyleType}
    carbonation::Union{Nothing, Float64}
    beer_pH::Union{Nothing, AcidityType}
    coauthor::Union{Nothing, String}
    apparent_attenuation::Union{Nothing, PercentType}
    efficiency::EfficiencyType
    taste::Union{Nothing, TasteType}
    ingredients::IngredientsType
    original_gravity::Union{Nothing, GravityType}
    type::String
end

struct TasteType
    rating::Float64
    notes::String
end


struct StyleBase
    name::String
    category_number::Union{Nothing, Int64}
    style_letter::Union{Nothing, String}
    style_guide::String
    category::String
    type::StyleCategories
end

struct RecipeStyleType
end

struct StyleType
end

struct Customer
    name::String
    id::Int64
    email::Union{Nothing, String}
end

struct MiscellaneousInventoryType
    amount::Any
end

struct MiscellaneousBase
    product_id::Union{Nothing, String}
    name::String
    producer::Union{Nothing, String}
    type::String
end

struct MiscellaneousAdditionType
end

struct MiscellaneousType
end

# Depends on struct ColorType from measureable_units.json
struct FermentableBase
    product_id::Union{Nothing, String}
    name::String
    yield::YieldType
    grain_group::Union{Nothing, String}
    producer::Union{Nothing, String}
    color::ColorType
    type::String
    origin::Union{Nothing, String}
end

# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct GravityType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
struct YieldType
    fine_coarse_difference::Union{Nothing, PercentType}
    potential::Union{Nothing, GravityType}
    fine_grind::Union{Nothing, PercentType}
    coarse_grind::Union{Nothing, PercentType}
end

struct FermentableInventoryType
    amount::Union{Nothing, Any}
end

struct FermentableType
end

struct FermentableAdditionType
end

# Depends on struct VolumeType from measureable_units.json
# Depends on struct MassType from measureable_units.json
# Depends on struct VolumeType from measureable_units.json
# Depends on struct VolumeType from measureable_units.json
struct CultureInventoryType
    culture::Union{Nothing, VolumeType}
    liquid::Union{Nothing, VolumeType}
    dry::Union{Nothing, MassType}
    slant::Union{Nothing, VolumeType}
end

struct CultureInformation
end

struct Zymocide
    no1::Union{Nothing, Bool}
    no28::Union{Nothing, Bool}
    no2::Union{Nothing, Bool}
    klus::Union{Nothing, Bool}
    neutral::Union{Nothing, Bool}
end

struct CultureBase
    product_id::Union{Nothing, String}
    name::String
    producer::Union{Nothing, String}
    type::String
    form::String
end

struct CultureAdditionType
end

struct FermentationProcedureType
    name::String
    fermentation_steps::Vector{FermentationStepType}
    notes::Union{Nothing, String}
    description::Union{Nothing, String}
end

# Depends on struct TemperatureType from measureable_units.json
struct MashProcedureType
    name::String
    grain_temperature::TemperatureType
    mash_steps::Vector{MashStepType}
    notes::Union{Nothing, String}
end

# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
# Depends on struct ConcentrationType from measureable_units.json
struct WaterBase
    bicarbonate::ConcentrationType
    magnesium::ConcentrationType
    sodium::ConcentrationType
    iron::Union{Nothing, ConcentrationType}
    name::String
    nitrate::Union{Nothing, ConcentrationType}
    nitrite::Union{Nothing, ConcentrationType}
    sulfate::ConcentrationType
    calcium::ConcentrationType
    producer::Union{Nothing, String}
    carbonate::Union{Nothing, ConcentrationType}
    chloride::ConcentrationType
    flouride::Union{Nothing, ConcentrationType}
    potassium::Union{Nothing, ConcentrationType}
end

struct WaterAdditionType
end

struct WaterType
end

struct VarietyInformation
end

struct HopInventoryType
    amount::Union{Nothing, Any}
end

# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
struct OilContentType
    total_oil_ml_per_100g::Union{Nothing, Float64}
    myrcene::Union{Nothing, PercentType}
    geraniol::Union{Nothing, PercentType}
    linalool::Union{Nothing, PercentType}
    farnesene::Union{Nothing, PercentType}
    humulene::Union{Nothing, PercentType}
    polyphenols::Union{Nothing, PercentType}
    nerol::Union{Nothing, PercentType}
    cohumulone::Union{Nothing, PercentType}
    limonene::Union{Nothing, PercentType}
    b_pinene::Union{Nothing, PercentType}
    xanthohumol::Union{Nothing, PercentType}
    caryophyllene::Union{Nothing, PercentType}
    pinene::Union{Nothing, PercentType}
end


struct HopAdditionType
end

# Depends on struct PercentType from measureable_units.json
# Depends on struct PercentType from measureable_units.json
struct HopVarietyBase
    product_id::Union{Nothing, String}
    name::String
    alpha_acid::PercentType
    year::Union{Nothing, String}
    producer::Union{Nothing, String}
    beta_acid::Union{Nothing, PercentType}
    form::Union{Nothing, String}
    origin::Union{Nothing, String}
end

struct IBUEstimateType
    method::Union{Nothing, IBUMethodType}
end


struct TemperatureRangeType
    minimum::TemperatureType
    maximum::TemperatureType
end

struct ColorType
    unit::ColorUnitType
    value::Float64
end

struct VolumeType
    unit::VolumeUnitType
    value::Float64
end

struct TemperatureType
    unit::TemperatureUnitType
    value::Float64
end

struct SpecificVolumeType
    unit::SpecificVolumeUnitType
    value::Float64
end



struct CarbonationRangeType
    minimum::CarbonationType
    maximum::CarbonationType
end


struct TimeType
    unit::TimeUnitType
    value::Int64
end


struct ColorRangeType
    minimum::ColorType
    maximum::ColorType
end



struct PercentRangeType
    minimum::PercentType
    maximum::PercentType
end


struct AcidityType
    unit::AcidityUnitType
    value::Float64
end

struct MassType
    unit::MassUnitType
    value::Float64
end



struct PressureType
    unit::PressureUnitType
    value::Float64
end

struct SpecificHeatType
    unit::SpecificHeatUnitType
    value::Float64
end

struct GravityRangeType
    minimum::GravityType
    maximum::GravityType
end




struct UnitType
    unit::UnitUnitType
    value::Float64
end

struct DiastaticPowerType
    unit::DiastaticPowerUnitType
    value::Float64
end

struct BitternessRangeType
    minimum::BitternessType
    maximum::BitternessType
end



struct ConcentrationType
    unit::ConcentrationUnitType
    value::Float64
end



struct CarbonationType
    unit::CarbonationUnitType
    value::Float64
end

struct PercentType
    unit::PercentUnitType
    value::Float64
end


struct BitternessType
    unit::BitternessUnitType
    value::Float64
end

struct GravityType
    unit::GravityUnitType
    value::Float64
end




struct ViscosityType
    unit::ViscosityUnitType
    value::Float64
end

# Depends on struct VolumeType from measureable_units.json
struct EquipmentBase
    name::String
    maximum_volume::VolumeType
    type::Union{Nothing, String}
    form::String
end

struct EquipmentItemType
end

struct EquipmentType
    name::String
    equipment_items::Vector{EquipmentItemType}
end

# Depends on struct VolumeType from measureable_units.json
struct PackagingProcedureType
    name::String
    packaged_volume::Union{Nothing, VolumeType}
    packaging_vessels::Union{Nothing, Vector{PackagingVesselType}}
    notes::Union{Nothing, String}
    description::Union{Nothing, String}
end

# Depends on struct TimingType from timing.json
# Depends on struct VersionType from measureable_units.json
struct Beerjson
    fermentations::Union{Nothing, Vector{FermentationProcedureType}}
    packaging::Union{Nothing, Vector{PackagingProcedureType}}
    equipments::Union{Nothing, Vector{EquipmentType}}
    miscellaneous_ingredients::Union{Nothing, Vector{MiscellaneousType}}
    hop_varieties::Union{Nothing, Vector{VarietyInformation}}
    styles::Union{Nothing, Vector{StyleType}}
    boil::Union{Nothing, Vector{BoilProcedureType}}
    fermentables::Union{Nothing, Vector{FermentableType}}
    version::VersionType
    timing_object::Union{Nothing, TimingType}
    recipes::Union{Nothing, Vector{RecipeType}}
    profiles::Union{Nothing, Vector{WaterBase}}
    cultures::Union{Nothing, Vector{CultureInformation}}
    mashes::Union{Nothing, Vector{MashProcedureType}}
end

struct Schema
    beerjson::Beerjson
end
