# This file was programmatically generated from JSON Schemas.
# Generated on: 2025-09-25T10:40:21.090
# Do not edit this file directly.

"""
    OrderItems


"""
struct OrderItems
    productId::String
    quantity::Int64
    function OrderItems(productId::String, quantity::Int64)
        @assert quantity >= 4 "`quantity` must be greater than or equal to 4"
        @assert quantity < 20 "`quantity` must be less than 20"
        @assert quantity % 2 == 0 "`quantity` must be a multiple of 2"
        new(productId, quantity)
    end
end

"""
    Customer



Fields:
    `name`: The customer's full name.
    `id`: The unique identifier for the customer.
    `email`: The customer's email address.

"""
struct Customer
    name::String
    id::Int64
    email::Union{Nothing, String}
    function Customer(name::String, id::Int64, email::String)
        @assert length(name) >= 2 "`name` must have a minimum length of 2"
        @assert length(name) <= 50 "`name` must have a maximum length of 50"
        @assert id % 7 == 0 "`id` must be a multiple of 7"
        @assert length(email) >= 5 "`email` must have a minimum length of 5"
        @assert length(email) <= 100 "`email` must have a maximum length of 100"
        @assert occursin(Regex(pattern_str), email) "`email` must match the pattern."
        new(name, id, email)
    end
end

"""
    Order


"""
struct Order
    items::Vector{OrderItems}
    # Depends on Customer from customer_schema.json
    customer::Customer
    orderId::String
end
