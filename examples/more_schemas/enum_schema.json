{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ComplexEnumExample",
  "description": "An example schema to test deeply nested enumerated types within objects and references.",
  "type": "object",
  "properties": {
    "product": {
      "type": "object",
      "description": "A product with a nested shipping status.",
      "properties": {
        "id": {
          "type": "string"
        },
        "shipping_status": {
          "type": "string",
          "description": "The current shipping status of the product.",
          "enum": [
            "pending",
            "shipped",
            "delivered"
          ]
        }
      },
      "required": ["id", "shipping_status"]
    },
    "order_status": {
      "type": "object",
      "description": "The current status of the entire order.",
      "properties": {
        "priority": {
          "type": "integer",
          "description": "The priority level of the order.",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        "payment_status": {
          "$ref": "#/$defs/PaymentStatus"
        }
      },
      "required": ["priority", "payment_status"]
    },
    "mixed_enum_test": {
      "description": "An intentionally mixed-type enum to test union type generation.",
      "enum": ["a", 1, true]
    }
  },
  "$defs": {
    "PaymentStatus": {
      "type": "string",
      "description": "The status of a payment, defined as a reusable component.",
      "enum": [
        "paid",
        "pending",
        "failed"
      ]
    }
  },
  "required": [
    "product",
    "order_status",
    "mixed_enum_test"
  ]
}
