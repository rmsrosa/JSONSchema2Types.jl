# This file was programmatically generated from JSON Schemas.
# Generated on: 2025-10-04T13:39:50.140
# Do not edit this file directly.

using Dates, URIs, UUIDs

"""
    CombinedSchemaExample

    A single schema demonstrating oneOf, anyOf, allOf, and not.

    Fields:
    `not_a_password`: A password that cannot be the literal string 'password'.
    `any_of_identifier`: Demonstrates 'anyOf' for a product identifier.
    `one_of_user`: Demonstrates 'oneOf' for a user that is either a Person or a Company.
    `all_of_request`: Demonstrates 'allOf' to combine schemas for a request with authentication.
"""
struct CombinedSchemaExample
    not_a_password::String
    any_of_identifier::Union{CombinedSchemaExampleAnyOfIdentifier1, CombinedSchemaExampleAnyOfIdentifier2}
    one_of_user::Union{CombinedSchemaExampleOneOfUser1, CombinedSchemaExampleOneOfUser2}
    all_of_request::Any

    function CombinedSchemaExample(;not_a_password, any_of_identifier, one_of_user, all_of_request)
        return new(not_a_password, any_of_identifier, one_of_user, all_of_request)
    end
end


