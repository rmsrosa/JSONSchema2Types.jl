# This file was programmatically generated from JSON Schemas.
# Generated on: 2025-09-25T08:20:52.565
# Do not edit this file directly.

"""
    ComplexEnumExampleOrderStatus

The current status of the entire order.

Fields:
    `priority`: The priority level of the order.

"""
struct ComplexEnumExampleOrderStatus
    priority::Int64
    payment_status::PaymentStatus
end

"""
    ComplexEnumExampleProduct

A product with a nested shipping status.

Fields:
    `shipping_status`: The current shipping status of the product.

"""
struct ComplexEnumExampleProduct
    shipping_status::String
    id::String
end

const PaymentStatus_VALUES = Any["paid", "pending", "failed"]::Vector{String}
"""
    PaymentStatus

The status of a payment, defined as a reusable component.
"""
struct PaymentStatus
    value::String
    function PaymentStatus(value::String)
        @assert value in PaymentStatus_VALUES "Invalid value for PaymentStatus: '$value'"
        new(value)
    end
end

"""
    ComplexEnumExample

An example schema to test deeply nested enumerated types within objects and references.

Fields:
    `order_status`: The current status of the entire order.
    `mixed_enum_test`: An intentionally mixed-type enum to test union type generation.
    `product`: A product with a nested shipping status.

"""
struct ComplexEnumExample
    order_status::ComplexEnumExampleOrderStatus
    mixed_enum_test::Union{Bool, Int64, String}
    product::ComplexEnumExampleProduct
end
